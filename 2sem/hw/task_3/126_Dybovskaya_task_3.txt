QuickSort.java |12| int base = split(data, e, b); -> int base = split(data, b, e); |quickSort_sortArrayWithTwoNumbers_SortCorrect
QuickSort.java |24| swap(data, left, baseElem); -> swap(data, left - 1, baseElem); |quickSort_sortArrayWithTwoNumbers_SortCorrect
QuickSort.java |13| qSortRec(data, b, base - 2); -> qSortRec(data, b, base - 1);   |quickSort_sortArrayWithTwoNumbers_SortCorrect
QuickSort.java |25| baseElem = left; -> baseElem = left-1;                         |QuickSort_sortArrayWithSameNumbers_SortCorrect
QuickSort.java |29| swap(data, left + 1, right); -> swap(data, left, right);       |QuickSort_sortArrayWithSameNumbers_SortCorrect

MergeSort.java |19| merge(buffer, sorting, begin, middle - begin, end - middle); -> merge(buffer, sorting, begin, middle - begin+1, end - middle);                  | MergeSort_sortArrayWithTwoNumbers_SortCorrect
MergeSort.java |35| else if (comparator.compare(from[firstFocus], from[secondFocus]) > 0) ->  else if (comparator.compare(from[firstFocus], from[secondFocus]) < 0) | MergeSort_sortArrayWithTwoNumbers_SortCorrect
MergeSort.java |17| mergeSortRec(sorting, buffer, begin, middle); -> mergeSortRec(buffer,sorting, begin, middle);                                                   | MergeSort_sortTwoNumbers_SortCorrect
MergeSort.java |32| to[resPos] = from[secondFocus++]; -> to[resPos++] = from[secondFocus++];                                                                        | MergeSort_SortNotNeed_NumbersOnRightPositions
MergeSort.java |18| mergeSortRec(sorting, buffer, middle + 1, end); -> mergeSortRec(buffer,sorting, middle + 1, end);                                               | MergeSort_sortArrayB_SortCorrectÐ’
MergeSort.java |34| to[resPos++] = from[firstFocus]; -> to[resPos++] = from[firstFocus++];                                                                          | MergeSort_sortArray_SortCorrect

HeapSort.java |10| swap(0, data.length - sortedSize); -> swap(0, data.length - sortedSize - 1);                                        | HeapSort_SortNotNeed_SortCorrect
HeapSort.java |17| for (int i = start; i >= 1; --i) -> for (int i = start; i >= 0; --i)                                                | HeapSort_sortArrayDifNumbers_SortCorrect
HeapSort.java |18| siftDown(i, 2 * i, 2 * i + 1, data.length); -> siftDown(i, 2 * i+1, 2 * i + 2, data.length);                        | HeapSort_SortNotNeed_NumbersOnRightPositions
HeapSort.java |38| siftDown(right, 2 * right + 1, 2 * right + 2, data.length); -> siftDown(right, 2 * right + 1, 2 * right + 2, size); | HeapSort_sortArrayB_SortCorrect
HeapSort.java |34| siftDown(left, 2 * left, 2 * left + 1, size); -> siftDown(left, 2 * left+1, 2 * left + 2, size);                    | HeapSort_sortArrayB_SortCorrect